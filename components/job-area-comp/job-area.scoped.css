/* components/job-area-comp/job-area.scoped.css */

/*
  Description:
  Styles for the JobArea component, including the main layout,
  drag-and-drop overlay, and job content view. Uses native syntactical
  CSS nesting and grid areas for layout management. Includes an active
  state to show a visual selection border.
*/

/* Updated pulse-glow animation to pulse from 0.5 to 1 opacity */
@keyframes pulse-glow {
  0%,
  100% {
    box-shadow: 0 0 15px 2px hsla(210, 100%, 70%, 0.25);
  }
  50% {
    box-shadow: 0 0 15px 2px hsla(210, 100%, 70%, 0.5);
  }
}

/* --- Root Container --- */
.job-area {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  overflow: hidden;
  position: relative;

  /* Make all direct children occupy the same grid cell */
  & > * {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
  }

  /* --- Active State Styling --- */
  &.is-active {
    .job {
      .job-area-visual-select {
        opacity: 0.5;
      }
    }
  }

  /* --- Selection Box (for drag-to-select) --- */
  .selection-box {
    background-color: hsla(210, 100%, 50%, 0.2);
    border: 1px solid hsla(210, 100%, 70%, 0.5);
    pointer-events: none;
    position: absolute;
    z-index: 10;
  }

  /* --- Standard Job View --- */
  .job {
    display: grid;
    grid-template-areas:
      "header"
      "content";
    grid-template-rows: auto 1fr;
    height: 100%;
    overflow: hidden;
    z-index: 1;

    .job-header {
      border-block-end: 1px solid var(--brdr-clr);
      flex-shrink: 0;
      grid-area: header;
      padding: 10px;
    }

    .job-content {
      display: grid;
      gap: 10px;
      grid-area: content;
      grid-template-rows: auto 1fr;
      overflow: hidden;
      padding: 10px;
    }

    .job-area-visual-select {
      border: 1px solid var(--blu-lite);
      border-end-end-radius: var(--brdr-rad);
      border-end-start-radius: var(--brdr-rad);
      grid-column: 1 / -1;
      grid-row: 1 / -1;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.2s ease-in-out;
      z-index: 2;
    }
  }

  /* --- External Drag Overlay --- */
  .external-drag-overlay {
    backdrop-filter: blur(10px);
    background-color: hsla(var(--bg-hue), var(--bg-sat), calc(var(--bg-lum) * 0.6), 0.8);
    container-type: inline-size;
    cursor: not-allowed;
    display: flex;
    flex-direction: column;
    gap: 0;
    inset: 0;
    padding: 0;
    position: absolute;
    transition: opacity 0.2s ease-in-out;
    z-index: 100;

    /* Light theme adjustment for overlay */
    @container style(--theme: light) {
      & {
        background-color: hsla(var(--bg-hue), var(--bg-sat), calc(var(--bg-lum) + 3.6%), 0.8);
      }
    }

    /* --- Drop Zones within Overlay --- */
    .external-drop-zone {
      align-items: center;
      color: var(--txt-clr-liter);
      cursor: copy;
      display: flex;
      flex-basis: 50%;
      justify-content: center;
      padding: 2cqw;
      position: relative;
      transition: opacity 0.2s ease-in-out;

      .drop-zone-visual {
        align-items: center;
        background-color: hsla(var(--bg-hue), var(--bg-sat), var(--bg-lum), 0.1);
        border: 2px dashed var(--brdr-clr-liter);
        border-radius: var(--brdr-rad);
        block-size: 100%;
        display: flex;
        inline-size: 100%;
        justify-content: center;
        transform: scale(0.975);
        transition: transform 0.2s cubic-bezier(0.25, 0.46, 0.45, 0.94), opacity 0.2s ease-in-out,
          background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
      }

      .drop-zone-content {
        align-items: center;
        display: flex;
        flex-direction: column;
        font-size: 1.5rem;
        font-weight: bold;
        gap: 16px;
        justify-content: center;
        transition: color 0.2s ease-in-out;
      }

      /* --- Drop Zone Interaction Logic --- */
      /* 1. Universal hover/active state for ALL zones: scale up, add glow, and change to light blue. */
      &:hover .drop-zone-visual,
      &.drop-target-active .drop-zone-visual {
        animation: pulse-glow 4s infinite ease-in-out;
        background-color: hsla(210, 100%, 50%, 0.25);
        border-color: hsla(210, 100%, 75%, 0.8);
        transform: scale(1);
      }

      /* Make text brighter on hover/active */
      &:hover .drop-zone-content,
      &.drop-target-active .drop-zone-content {
        color: hsl(0, 0%, 100%);
      }

      /* --- Drop Zone Layout & Theming --- */
      &.new-job,
      &.separate-jobs {
        flex-basis: 25%;
      }

      &.current-job {
        flex-basis: 50%;
      }
    }

    /* 2. When the overlay has a hovered OR active drop zone, affect the OTHER zones. */
    &:has(.external-drop-zone:hover) .external-drop-zone:not(:hover),
    &:has(.external-drop-zone.drop-target-active) .external-drop-zone:not(.drop-target-active) {
      opacity: 0.5;

      .drop-zone-visual {
        transform: scale(0.95);
      }
    }

    /* --- Error State --- */
    &.has-error {
      border: 2px dashed hsla(0, 70%, 60%, 0.8);
    }

    .drop-error-message {
      align-items: center;
      background-color: hsla(0, 70%, 30%, 0.5);
      color: hsl(0, 100%, 85%);
      display: flex;
      flex-direction: column;
      font-size: 1.5rem;
      font-weight: bold;
      gap: 16px;
      inset: 0;
      justify-content: center;
      padding: 20px;
      pointer-events: none;
      position: absolute;
      text-align: center;
      z-index: 101; /* Ensure it's on top of the drop zones */
    }
  }
}

/* --- Vue Transition --- */
.job-fade-enter-active,
.job-fade-leave-active {
  transition: opacity 0.15s ease-in-out;
}

.job-fade-enter-from,
.job-fade-leave-to {
  opacity: 0;
}
